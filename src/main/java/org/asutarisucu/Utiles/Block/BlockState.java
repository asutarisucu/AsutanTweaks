package org.asutarisucu.Utiles.Block;

import net.minecraft.state.property.Properties;
import net.minecraft.state.property.Property;

public class BlockState {
    public static Property<?> getProperty(String name){
        Property<?> property=null;
        switch (name) {
            case "AGE_1", "age_1" -> property = Properties.AGE_1;
            case "AGE_15", "age_15" -> property = Properties.AGE_15;
            case "AGE_2", "age_2" -> property = Properties.AGE_2;
            case "AGE_25", "age_25" -> property = Properties.AGE_25;
            case "AGE_3", "age_3" -> property = Properties.AGE_3;
            case "AGE_4", "age_4" -> property = Properties.AGE_4;
            case "AGE_5", "age_5" -> property = Properties.AGE_5;
            case "AGE_7", "age_7" -> property = Properties.AGE_7;
            case "ATTACHMENT", "attachment" -> property = Properties.ATTACHMENT;
            case "ATTACHED", "attached" -> property = Properties.ATTACHED;
            case "AXIS", "axis" -> property = Properties.AXIS;
            case "BAMBOO_LEAVES", "bamboo_leaves" -> property = Properties.BAMBOO_LEAVES;
            case "BED_PART", "bed_part" -> property = Properties.BED_PART;
            case "BERRIES", "berries" -> property = Properties.BERRIES;
            case "BITES", "bites" -> property = Properties.BITES;
            case "BLOOM", "bloom" -> property = Properties.BLOOM;
            case "BLOCK_HALF", "block_half" -> property = Properties.BLOCK_HALF;
            case "BOTTOM", "bottom" -> property = Properties.BOTTOM;
            case "CANDLES", "candles" -> property = Properties.CANDLES;
            case "CAN_SUMMON", "can_summon" -> property = Properties.CAN_SUMMON;
            case "CHARGES", "charges" -> property = Properties.CHARGES;
            case "CHEST_TYPE", "chest_type" -> property = Properties.CHEST_TYPE;
            case "COMPARATOR_MODE", "comparator_mode" -> property = Properties.COMPARATOR_MODE;
            case "CONDITIONAL", "conditional" -> property = Properties.CONDITIONAL;
            case "DELAY", "delay" -> property = Properties.DELAY;
            case "DISARMED", "disarmed" -> property = Properties.DISARMED;
            case "DISTANCE_0_7", "distance_0_7" -> property = Properties.DISTANCE_0_7;
            case "DISTANCE_1_7", "distance_1_7" -> property = Properties.DISTANCE_1_7;
            case "DOOR_HINGE", "door_hinge" -> property = Properties.DOOR_HINGE;
            case "DOUBLE_BLOCK_HALF", "double_block_half" -> property = Properties.DOUBLE_BLOCK_HALF;
            case "DOWN", "down" -> property = Properties.DOWN;
            case "DRAG", "drag" -> property = Properties.DRAG;
            case "EAST", "east" -> property = Properties.EAST;
            case "EAST_WALL_SHAPE", "east_wall_shape" -> property = Properties.EAST_WALL_SHAPE;
            case "EAST_WIRE_CONNECTION", "east_wire_connection" -> property = Properties.EAST_WIRE_CONNECTION;
            case "EGGS", "eggs" -> property = Properties.EGGS;
            case "ENABLED", "enabled" -> property = Properties.ENABLED;
            case "EXTENDED", "extended" -> property = Properties.EXTENDED;
            case "EYE", "eye" -> property = Properties.EYE;
            case "FACING", "facing" -> property = Properties.FACING;
            case "FALLING", "falling" -> property = Properties.FALLING;
            case "HANGING", "hanging" -> property = Properties.HANGING;
            case "HAS_BOOK", "has_book" -> property = Properties.HAS_BOOK;
            case "HAS_BOTTLE_0", "has_bottle_0" -> property = Properties.HAS_BOTTLE_0;
            case "HAS_BOTTLE_1", "has_bottle_1" -> property = Properties.HAS_BOTTLE_1;
            case "HAS_BOTTLE_2", "has_bottle_2" -> property = Properties.HAS_BOTTLE_2;
            case "HAS_RECORD", "has_record" -> property = Properties.HAS_RECORD;
            case "HATCH", "hatch" -> property = Properties.HATCH;
            case "HONEY_LEVEL", "honey_level" -> property = Properties.HONEY_LEVEL;
            case "FACE", "face" -> property = Properties.HOPPER_FACING;
            case "HORIZONTAL_AXIS", "horizontal_axis" -> property = Properties.HORIZONTAL_AXIS;
            case "HORIZONTAL_FACING", "horizontal_facing" -> property = Properties.HORIZONTAL_FACING;
            case "INVERTED", "inverted" -> property = Properties.INVERTED;
            case "INSTRUMENT", "instrument" -> property = Properties.INSTRUMENT;
            case "IN_WALL", "in_wall" -> property = Properties.IN_WALL;
            case "LAYERS", "layers" -> property = Properties.LAYERS;
            case "LEVEL_1_8", "level_1_8" -> property = Properties.LEVEL_1_8;
            case "LEVEL_15", "level_15" -> property = Properties.LEVEL_15;
            case "LEVEL_3", "level_3" -> property = Properties.LEVEL_3;
            case "LEVEL_8", "level_8" -> property = Properties.LEVEL_8;
            case "LIT", "lit" -> property = Properties.LIT;
            case "LOCKED", "locked" -> property = Properties.LOCKED;
            case "MOISTURE", "moisture" -> property = Properties.MOISTURE;
            case "NORTH", "north" -> property = Properties.NORTH;
            case "NORTH_WALL_SHAPE", "north_wall_shape" -> property = Properties.NORTH_WALL_SHAPE;
            case "NORTH_WIRE_CONNECTION", "north_wire_connection" -> property = Properties.NORTH_WIRE_CONNECTION;
            case "NOTE", "note" -> property = Properties.NOTE;
            case "OCCUPIED", "occupied" -> property = Properties.OCCUPIED;
            case "OPEN", "open" -> property = Properties.OPEN;
            case "ORIENTATION", "orientation" -> property = Properties.ORIENTATION;
            case "PERSISTENT", "persistent" -> property = Properties.PERSISTENT;
            case "PICKLES", "pickles" -> property = Properties.PICKLES;
            case "PISTON_TYPE", "piston_type" -> property = Properties.PISTON_TYPE;
            case "POWER", "power" -> property = Properties.POWER;
            case "POWERED", "powered" -> property = Properties.POWERED;
            case "RAIL_SHAPE", "rail_shape" -> property = Properties.RAIL_SHAPE;
            case "ROTATION", "rotation" -> property = Properties.ROTATION;
            case "SCULK_SENSOR_PHASE", "sculk_sensor_phase" -> property = Properties.SCULK_SENSOR_PHASE;
            case "SHORT", "short" -> property = Properties.SHORT;
            case "SHRIEKING", "shrieking" -> property = Properties.SHRIEKING;
            case "SIGNAL_FIRE", "signal_fire" -> property = Properties.SIGNAL_FIRE;
            case "SLOT_0_OCCUPIED", "slot_0_occupied" -> property = Properties.SLOT_0_OCCUPIED;
            case "SLOT_1_OCCUPIED", "slot_1_occupied" -> property = Properties.SLOT_1_OCCUPIED;
            case "SLOT_2_OCCUPIED", "slot_2_occupied" -> property = Properties.SLOT_2_OCCUPIED;
            case "SLOT_3_OCCUPIED", "slot_3_occupied" -> property = Properties.SLOT_3_OCCUPIED;
            case "SLOT_4_OCCUPIED", "slot_4_occupied" -> property = Properties.SLOT_4_OCCUPIED;
            case "SLOT_5_OCCUPIED", "slot_5_occupied" -> property = Properties.SLOT_5_OCCUPIED;
            case "SNOWY", "snowy" -> property = Properties.SNOWY;
            case "SOUTH", "south" -> property = Properties.SOUTH;
            case "SOUTH_WALL_SHAPE", "south_wall_shape" -> property = Properties.SOUTH_WALL_SHAPE;
            case "SOUTH_WIRE_CONNECTION", "south_wire_connection" -> property = Properties.SOUTH_WIRE_CONNECTION;
            case "STAGE", "stage" -> property = Properties.STAGE;
            case "STAIR_SHAPE", "stair_shape" -> property = Properties.STAIR_SHAPE;
            case "STRUCTURE_BLOCK_MODE", "structure_block_mode" -> property = Properties.STRUCTURE_BLOCK_MODE;
            case "TILT", "tilt" -> property = Properties.TILT;
            case "TRIGGERED", "triggered" -> property = Properties.TRIGGERED;
            case "UNSTABLE", "unstable" -> property = Properties.UNSTABLE;
            case "UP", "up" -> property = Properties.UP;
            case "VERTICAL_DIRECTION", "vertical_direction" -> property = Properties.VERTICAL_DIRECTION;
            case "WALL_MOUNT_LOCATION", "wall_mount_location" -> property = Properties.WALL_MOUNT_LOCATION;
            case "WATERLOGGED", "waterlogged" -> property = Properties.WATERLOGGED;
            case "WEST", "west" -> property = Properties.WEST;
            case "WEST_WALL_SHAPE", "west_wall_shape" -> property = Properties.WEST_WALL_SHAPE;
            case "WEST_WIRE_CONNECTION", "west_wire_connection" -> property = Properties.WEST_WIRE_CONNECTION;
        }
        return property;
    }
}
